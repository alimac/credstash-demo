
- name: look up external ip address
  command: >
    curl ifconfig.io
      --silent
  register: ifconfig_io
  changed_when: no

- name: create security group
  ec2_group:
    name: "{{ ec2_security_group }}"
    description: "EC2 security group for {{ ec2_security_group }} demo"
    region: "{{ region }}"
    profile: "{{ profile }}"
    rules:
      - proto: tcp
        from_port: 22
        to_port: 22
        cidr_ip: "{{ ifconfig_io.stdout }}/32"
    rules_egress:
      - proto: all
        cidr_ip: 0.0.0.0/0

- name: get most recent ubuntu ami
  ec2_ami_find:
    owner: 099720109477
    name: "ubuntu/images/hvm-ssd/ubuntu-xenial-16.04-amd64-server-*"
    region: "{{ region }}"
    profile: "{{ profile }}"
    no_result_action: fail
    sort: creationDate
    sort_order: descending
  register: ami_find

- ec2_vpc_subnet_facts:
    region: "{{ region }}"
    profile: "{{ profile }}"
  register: vpc_facts

- name: launch ec2 instance
  ec2:
    key_name: "{{ ec2_keypair }}"
    instance_type: "{{ ec2_instance_type }}"
    image: "{{ ami_find.results[0].ami_id }}"
    wait: yes
    vpc_subnet_id: "{{ vpc_facts.subnets[0].id }}"
    group: "{{ ec2_security_group }}"
    exact_count: 1
    assign_public_ip: yes
    instance_profile_name: "{{ instance_profile }}"
    region: "{{ region }}"
    profile: "{{ profile }}"
    instance_tags:
      Name: credstash-demo
      Purpose: credstash-demo
    count_tag:
      Purpose: credstash-demo
  register: ec2

- name: add instance to host group
  add_host:
    hostname: "{{ item.public_ip }}"
    groupname: credstash-demo
    ansible_ssh_private_key_file: "~/.ssh/{{ ec2_keypair }}.pem"
  with_items: "{{ ec2.tagged_instances }}"

- name: wait for ssh to become available
  wait_for:
    host: "{{ item.public_ip }}"
    port: 22
    delay: 90
    timeout: 320
    state: started
  with_items: "{{ ec2.instances | default(omit) }}"
  remote_user: ubuntu
  when: (ec2.instances | length) > 0
